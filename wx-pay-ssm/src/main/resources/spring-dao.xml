<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 配置整合mybatis -->
    <!-- 1.关联数据库文件 -->
    <context:property-placeholder location="classpath:database.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="${jdbc-username}"/>
        <property name="password" value="${jdbc-password}"/>
        <property name="url" value="${jdbc-url}"/>
        <property name="driverClassName" value="${jdbc-driverClassName}"/>

        <property name="initialSize" value="${initialSize}"/>
        <property name="minIdle" value="${minIdle}"/>
        <property name="maxActive" value="${maxActive}"/>
        <property name="maxWait" value="${maxWait}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${validationQuery}"/>
        <property name="testWhileIdle" value="${testWhileIdle}"/>
        <property name="testOnBorrow" value="${testOnBorrow}"/>
        <property name="testOnReturn" value="${testOnReturn}"/>
        <property name="poolPreparedStatements" value="${poolPreparedStatements}"/>
        <property name="filters" value="${filters}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${maxPoolPreparedStatementPerConnectionSize}"/>
        <property name="useGlobalDataSourceStat" value="${useGlobalDataSourceStat}"/>
        <property name="connectionProperties" value="${connectionProperties}"/>
    </bean>
    <!-- 3.配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--<property name="configuration">-->
        <!--<bean class="org.apache.ibatis.session.Configuration">-->
        <!--<property name="mapUnderscoreToCamelCase" value="true"/>-->
        <!--<property name="logImpl" value="LOG4J"/>-->
        <!--</bean>-->
        <!--</property>-->
    </bean>
    <!--一种实现方式 BookMapperImpl-->
    <!--<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">-->
    <!--<constructor-arg index="0" ref="sqlSessionFactory"/>-->
    <!--</bean>-->
    <!--<bean id="bookMapperImpl" class="cn.stevekung.mapper.BookMapperImpl">-->
    <!--<property name="sqlSession" ref="sqlSession"/>-->
    <!--</bean>-->
    <!--另一种实现方式 扫描mapper接口-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描Dao接口包 -->
        <property name="basePackage" value="cn.stevekung.mapper"/>
    </bean>
</beans>